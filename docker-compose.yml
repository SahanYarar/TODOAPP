version: '3.9'
services:
  todo:
    build:
      context: /home/sahan/Documents/TODOAPP
      dockerfile: Dockerfile
    ports:
      - '9920:9920'
    environment:
      DB_HOST: db
      DB_DRIVER: postgres
      DB_USER: postgres
      DB_PASSWORD: 11111
      DB_NAME: sahan
      DB_PORT: 5432
    depends_on:
      - db
      - kafka
      - zookeeper
      - redis
    networks:
      - todo_app
  auth:
    build:
      context: /home/sahan/Documents/Auth
      dockerfile: Dockerfile
    ports:
      - '8050:8050'
    environment:
      DB_HOST: db
      DB_DRIVER: postgres
      DB_USER: postgres
      DB_PASSWORD: 11111
      DB_NAME: sahan
      DB_PORT: 5432
    depends_on:
      - db
      - kafka
      - zookeeper
      - redis
    networks:
      - todo_app
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 142963
      POSTGRES_DB: sahan
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - '5432:5432'
    networks:
      - todo_app
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - todo_app
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_ADVERTISED_HOST_NAME: zookeeper
    networks:
      - todo_app
  notifications:
    ports:
      - '8880:8880'
    build:
      context: /home/sahan/Documents/NotificationService
      dockerfile: Dockerfile
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - zookeeper
      - db
      - kafka
      - redis
    networks:
      - todo_app
  redis:
    image: redis
    ports:
      - '6379:6379'
    environment:
      REDIS_HOST: redis
      DB_HOST: db
    depends_on:
      - db
    networks:
      - todo_app
networks:
  todo_app:
    driver: bridge