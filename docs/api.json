{
    "swagger": "2.0",
    "info": {
        "description": "https://github.com/SahanYarar/TODOAPP",
        "title": "TodoAPI",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:9092",
    "basePath": "/",
    "paths": {
        "/activation/{userid}": {
            "patch": {
                "description": "Actives email",
                "produces": [
                    "application/json"
                ],
                "summary": "ActivateEmail",
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/resetpassword": {
            "patch": {
                "description": "Resets user password by email",
                "produces": [
                    "application/json"
                ],
                "summary": "ResetUserPassword",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/sign_up": {
            "post": {
                "description": "Signs user and starts kafka.produce",
                "produces": [
                    "application/json"
                ],
                "summary": "SignUser",
                "parameters": [
                    {
                        "description": "User name,email and password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/todo/create": {
            "post": {
                "description": "CreatesToDo",
                "produces": [
                    "application/json"
                ],
                "summary": "CreatesToDo",
                "parameters": [
                    {
                        "description": "ToDo  description,status and user_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ToDoRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.ToDo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/todo/{todoid}": {
            "get": {
                "description": "Gets ToDo by id",
                "produces": [
                    "application/json"
                ],
                "summary": "GetToDo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.ToDo"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/todos/": {
            "get": {
                "description": "Gets all ToDos",
                "produces": [
                    "application/json"
                ],
                "summary": "GetsAllTodos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.ToDo"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/delete/{userid}": {
            "delete": {
                "description": "Deletes user",
                "produces": [
                    "application/json"
                ],
                "summary": "DeleteUser",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/user/update/{userid}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates user password by id",
                "produces": [
                    "application/json"
                ],
                "summary": "UpdateUserPassword",
                "parameters": [
                    {
                        "description": "User password,confirmpassword",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{userid}": {
            "get": {
                "description": "Retrieves user by id",
                "produces": [
                    "application/json"
                ],
                "summary": "GetUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/user/{userid}/todo/delete/{todoid}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes ToDo by todo and user id",
                "produces": [
                    "application/json"
                ],
                "summary": "DeletesToDo",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{userid}/todo/update/{todoid}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates ToDo",
                "produces": [
                    "application/json"
                ],
                "summary": "UpdateToDo",
                "parameters": [
                    {
                        "description": "ToDo  description,status",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ToDoPatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entities.ToDo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieves all users",
                "produces": [
                    "application/json"
                ],
                "summary": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.User"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.ToDo": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isEmailActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "todos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ToDo"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.ToDoPatchRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.ToDoRequest": {
            "type": "object",
            "required": [
                "description",
                "status",
                "user_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.UserPasswordRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserResetPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string"
                },
                "DeletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "Id": {
                    "type": "integer"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "Todos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.ToDo"
                    }
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UserSignRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}